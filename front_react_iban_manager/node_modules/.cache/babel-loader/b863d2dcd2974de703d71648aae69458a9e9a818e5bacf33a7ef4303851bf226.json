{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alisa\\\\IdeaProjects\\\\IbanManagerApp\\\\front_react_iban_manager\\\\src\\\\pages\\\\IbanForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from '../utils/axiosConfig';\nimport './IbanForm.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst IbanForm = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const isEditMode = !!id;\n  const navigate = useNavigate();\n\n  // Form state\n  const [formData, setFormData] = useState({\n    ibanCode: '',\n    year: new Date().getFullYear(),\n    ecoCode: '',\n    raionCode: '',\n    localityCode: ''\n  });\n\n  // Form options\n  const [years, setYears] = useState([]);\n  const [ecoCodes, setEcoCodes] = useState([]);\n  const [raions, setRaions] = useState([]);\n  const [localities, setLocalities] = useState([]);\n\n  // UI state\n  const [loading, setLoading] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  const [validationErrors, setValidationErrors] = useState({});\n  const [success, setSuccess] = useState('');\n\n  // Generate years array (current year and 4 previous years)\n  useEffect(() => {\n    const currentYear = new Date().getFullYear();\n    const yearsArray = Array.from({\n      length: 5\n    }, (_, i) => currentYear - i);\n    setYears(yearsArray);\n  }, []);\n\n  // Fetch necessary data\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const [ecoResponse, raionResponse] = await Promise.all([axios.get('/ibans/eco-codes'), axios.get('/ibans/raions')]);\n        setEcoCodes(ecoResponse.data);\n        setRaions(raionResponse.data);\n\n        // If in edit mode, fetch IBAN data\n        if (isEditMode) {\n          const ibanResponse = await axios.get(`/ibans/${id}`);\n          const ibanData = ibanResponse.data;\n          setFormData({\n            ibanCode: ibanData.ibanCode,\n            year: ibanData.year,\n            ecoCode: ibanData.ecoCode,\n            raionCode: ibanData.raionCode,\n            localityCode: ibanData.localityCode\n          });\n\n          // If raion is selected, load localities\n          if (ibanData.raionCode) {\n            const localityResponse = await axios.get(`/ibans/localities/${ibanData.raionCode}`);\n            setLocalities(localityResponse.data);\n          }\n        }\n      } catch (err) {\n        setError('Nu s-au putut încărca datele. Vă rugăm să încercați din nou.');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [id, isEditMode]);\n\n  // Load localities when raion changes\n  useEffect(() => {\n    const fetchLocalities = async () => {\n      if (!formData.raionCode) {\n        setLocalities([]);\n        return;\n      }\n      setLoading(true);\n      try {\n        const response = await axios.get(`/ibans/localities/${formData.raionCode}`);\n        setLocalities(response.data);\n      } catch (err) {\n        console.error('Error loading localities:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchLocalities();\n  }, [formData.raionCode]);\n\n  // Handle input changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // For IBAN code, convert to uppercase\n    if (name === 'ibanCode') {\n      setFormData({\n        ...formData,\n        [name]: value.toUpperCase()\n      });\n    } else if (name === 'raionCode') {\n      // Reset locality when raion changes\n      setFormData({\n        ...formData,\n        [name]: value,\n        localityCode: ''\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n\n    // Clear validation errors for this field\n    if (validationErrors[name]) {\n      setValidationErrors({\n        ...validationErrors,\n        [name]: null\n      });\n    }\n  };\n\n  // Validate IBAN code\n  const validateIbanCode = ibanCode => {\n    const errors = [];\n\n    // Check length\n    if (ibanCode.length !== 24) {\n      errors.push('Codul IBAN trebuie să conțină exact 24 de caractere.');\n    }\n\n    // Check if starts with MD\n    if (!ibanCode.startsWith('MD')) {\n      errors.push('Codul IBAN trebuie să înceapă cu \"MD\".');\n    }\n\n    // Check if last 14 characters are digits\n    const last14Chars = ibanCode.slice(-14);\n    if (!/^\\d+$/.test(last14Chars)) {\n      errors.push('Ultimele 14 caractere trebuie să fie numere.');\n    }\n\n    // Check for uppercase letters\n    if (ibanCode !== ibanCode.toUpperCase()) {\n      errors.push('Toate literele trebuie să fie majuscule.');\n    }\n    return errors;\n  };\n\n  // Validate form before submission\n  const validateForm = () => {\n    const errors = {};\n\n    // Validate IBAN code\n    if (!formData.ibanCode) {\n      errors.ibanCode = ['Codul IBAN este obligatoriu.'];\n    } else {\n      const ibanErrors = validateIbanCode(formData.ibanCode);\n      if (ibanErrors.length > 0) {\n        errors.ibanCode = ibanErrors;\n      }\n    }\n\n    // Validate other required fields\n    if (!formData.ecoCode) {\n      errors.ecoCode = ['Codul Eco este obligatoriu.'];\n    }\n    if (!formData.raionCode) {\n      errors.raionCode = ['Raionul este obligatoriu.'];\n    }\n    if (!formData.localityCode) {\n      errors.localityCode = ['Localitatea este obligatorie.'];\n    }\n    return errors;\n  };\n\n  // Form submission handler\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate form\n    const errors = validateForm();\n    if (Object.keys(errors).length > 0) {\n      setValidationErrors(errors);\n      return;\n    }\n    setSubmitting(true);\n    setError('');\n    setSuccess('');\n    try {\n      if (isEditMode) {\n        // Update existing IBAN\n        await axios.put(`/ibans/${id}`, formData);\n        setSuccess('IBAN actualizat cu succes!');\n\n        // Redirect after short delay\n        setTimeout(() => navigate('/ibans'), 1500);\n      } else {\n        // Create new IBAN\n        await axios.post('/ibans', formData);\n        setSuccess('IBAN adăugat cu succes!');\n\n        // Redirect after short delay\n        setTimeout(() => navigate('/ibans'), 1500);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error saving IBAN:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'A apărut o eroare. Vă rugăm să încercați din nou.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"iban-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isEditMode ? 'Editare IBAN' : 'Adăugare IBAN Nou'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), loading && !submitting && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Eroare\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Succes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"iban-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ibanCode\",\n            children: [\"Cod IBAN \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"ibanCode\",\n            name: \"ibanCode\",\n            type: \"text\",\n            value: formData.ibanCode,\n            onChange: handleChange,\n            maxLength: \"24\",\n            className: validationErrors.ibanCode ? 'error' : '',\n            placeholder: \"MD12AGRN0000123456789012\",\n            disabled: submitting\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this), validationErrors.ibanCode && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-list\",\n            children: validationErrors.ibanCode.map((err, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-text\",\n              children: err\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hint-text\",\n            children: \"IBAN-ul trebuie s\\u0103 aib\\u0103 24 de caractere, s\\u0103 \\xEEnceap\\u0103 cu MD \\u0219i ultimele 14 caractere s\\u0103 fie cifre.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"year\",\n            children: [\"Anul \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"year\",\n            name: \"year\",\n            value: formData.year,\n            onChange: handleChange,\n            disabled: submitting,\n            children: years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: year,\n              children: year\n            }, year, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ecoCode\",\n            children: [\"Codul Eco \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"ecoCode\",\n            name: \"ecoCode\",\n            value: formData.ecoCode,\n            onChange: handleChange,\n            className: validationErrors.ecoCode ? 'error' : '',\n            disabled: submitting,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecta\\u021Bi codul Eco\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 29\n            }, this), ecoCodes.map(eco => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: eco.code,\n              children: [eco.code, \" - \", eco.label]\n            }, eco.code, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this), validationErrors.ecoCode && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: validationErrors.ecoCode[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"raionCode\",\n            children: [\"Raion \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"raionCode\",\n            name: \"raionCode\",\n            value: formData.raionCode,\n            onChange: handleChange,\n            className: validationErrors.raionCode ? 'error' : '',\n            disabled: submitting,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecta\\u021Bi raionul\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 29\n            }, this), raions.map(raion => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: raion.code,\n              children: [raion.code, \" - \", raion.name]\n            }, raion.code, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this), validationErrors.raionCode && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: validationErrors.raionCode[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"localityCode\",\n            children: [\"Localitate \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"localityCode\",\n            name: \"localityCode\",\n            value: formData.localityCode,\n            onChange: handleChange,\n            className: validationErrors.localityCode ? 'error' : '',\n            disabled: submitting || !formData.raionCode,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: formData.raionCode ? 'Selectați localitatea' : 'Selectați mai întâi un raion'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 29\n            }, this), localities.map(locality => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: locality.code,\n              children: [locality.code, \" - \", locality.name]\n            }, locality.code, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 25\n          }, this), validationErrors.localityCode && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: validationErrors.localityCode[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"add-iban-btn\",\n            disabled: submitting,\n            children: submitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loading-spinner-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 37\n              }, this), \"Se proceseaz\\u0103...\"]\n            }, void 0, true) : isEditMode ? 'Salvează modificările' : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"plus-icon\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 41\n              }, this), \" Adaug\\u0103 IBAN\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => navigate('/ibans'),\n            className: \"cancel-button\",\n            disabled: submitting,\n            children: \"Anuleaz\\u0103\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 9\n  }, this);\n};\n_s(IbanForm, \"ukyVJzLubjJZfI0IG9G/ROQO3F8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = IbanForm;\nexport default IbanForm;\nvar _c;\n$RefreshReg$(_c, \"IbanForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","IbanForm","_s","id","isEditMode","navigate","formData","setFormData","ibanCode","year","Date","getFullYear","ecoCode","raionCode","localityCode","years","setYears","ecoCodes","setEcoCodes","raions","setRaions","localities","setLocalities","loading","setLoading","submitting","setSubmitting","error","setError","validationErrors","setValidationErrors","success","setSuccess","currentYear","yearsArray","Array","from","length","_","i","fetchData","ecoResponse","raionResponse","Promise","all","get","data","ibanResponse","ibanData","localityResponse","err","console","fetchLocalities","response","handleChange","e","name","value","target","toUpperCase","validateIbanCode","errors","push","startsWith","last14Chars","slice","test","validateForm","ibanErrors","handleSubmit","preventDefault","Object","keys","put","setTimeout","post","_err$response","_err$response$data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","maxLength","placeholder","disabled","map","index","eco","code","label","raion","locality","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Alisa/IdeaProjects/IbanManagerApp/front_react_iban_manager/src/pages/IbanForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from '../utils/axiosConfig';\r\nimport './IbanForm.css';\r\n\r\nconst IbanForm = () => {\r\n    const { id } = useParams();\r\n    const isEditMode = !!id;\r\n    const navigate = useNavigate();\r\n\r\n    // Form state\r\n    const [formData, setFormData] = useState({\r\n        ibanCode: '',\r\n        year: new Date().getFullYear(),\r\n        ecoCode: '',\r\n        raionCode: '',\r\n        localityCode: ''\r\n    });\r\n\r\n    // Form options\r\n    const [years, setYears] = useState([]);\r\n    const [ecoCodes, setEcoCodes] = useState([]);\r\n    const [raions, setRaions] = useState([]);\r\n    const [localities, setLocalities] = useState([]);\r\n\r\n    // UI state\r\n    const [loading, setLoading] = useState(false);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [validationErrors, setValidationErrors] = useState({});\r\n    const [success, setSuccess] = useState('');\r\n\r\n    // Generate years array (current year and 4 previous years)\r\n    useEffect(() => {\r\n        const currentYear = new Date().getFullYear();\r\n        const yearsArray = Array.from({ length: 5 }, (_, i) => currentYear - i);\r\n        setYears(yearsArray);\r\n    }, []);\r\n\r\n    // Fetch necessary data\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const [ecoResponse, raionResponse] = await Promise.all([\r\n                    axios.get('/ibans/eco-codes'),\r\n                    axios.get('/ibans/raions')\r\n                ]);\r\n\r\n                setEcoCodes(ecoResponse.data);\r\n                setRaions(raionResponse.data);\r\n\r\n                // If in edit mode, fetch IBAN data\r\n                if (isEditMode) {\r\n                    const ibanResponse = await axios.get(`/ibans/${id}`);\r\n                    const ibanData = ibanResponse.data;\r\n                    setFormData({\r\n                        ibanCode: ibanData.ibanCode,\r\n                        year: ibanData.year,\r\n                        ecoCode: ibanData.ecoCode,\r\n                        raionCode: ibanData.raionCode,\r\n                        localityCode: ibanData.localityCode\r\n                    });\r\n\r\n                    // If raion is selected, load localities\r\n                    if (ibanData.raionCode) {\r\n                        const localityResponse = await axios.get(`/ibans/localities/${ibanData.raionCode}`);\r\n                        setLocalities(localityResponse.data);\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                setError('Nu s-au putut încărca datele. Vă rugăm să încercați din nou.');\r\n                console.error(err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [id, isEditMode]);\r\n\r\n    // Load localities when raion changes\r\n    useEffect(() => {\r\n        const fetchLocalities = async () => {\r\n            if (!formData.raionCode) {\r\n                setLocalities([]);\r\n                return;\r\n            }\r\n\r\n            setLoading(true);\r\n            try {\r\n                const response = await axios.get(`/ibans/localities/${formData.raionCode}`);\r\n                setLocalities(response.data);\r\n            } catch (err) {\r\n                console.error('Error loading localities:', err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchLocalities();\r\n    }, [formData.raionCode]);\r\n\r\n    // Handle input changes\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        // For IBAN code, convert to uppercase\r\n        if (name === 'ibanCode') {\r\n            setFormData({\r\n                ...formData,\r\n                [name]: value.toUpperCase()\r\n            });\r\n        } else if (name === 'raionCode') {\r\n            // Reset locality when raion changes\r\n            setFormData({\r\n                ...formData,\r\n                [name]: value,\r\n                localityCode: ''\r\n            });\r\n        } else {\r\n            setFormData({\r\n                ...formData,\r\n                [name]: value\r\n            });\r\n        }\r\n\r\n        // Clear validation errors for this field\r\n        if (validationErrors[name]) {\r\n            setValidationErrors({\r\n                ...validationErrors,\r\n                [name]: null\r\n            });\r\n        }\r\n    };\r\n\r\n    // Validate IBAN code\r\n    const validateIbanCode = (ibanCode) => {\r\n        const errors = [];\r\n\r\n        // Check length\r\n        if (ibanCode.length !== 24) {\r\n            errors.push('Codul IBAN trebuie să conțină exact 24 de caractere.');\r\n        }\r\n\r\n        // Check if starts with MD\r\n        if (!ibanCode.startsWith('MD')) {\r\n            errors.push('Codul IBAN trebuie să înceapă cu \"MD\".');\r\n        }\r\n\r\n        // Check if last 14 characters are digits\r\n        const last14Chars = ibanCode.slice(-14);\r\n        if (!/^\\d+$/.test(last14Chars)) {\r\n            errors.push('Ultimele 14 caractere trebuie să fie numere.');\r\n        }\r\n\r\n        // Check for uppercase letters\r\n        if (ibanCode !== ibanCode.toUpperCase()) {\r\n            errors.push('Toate literele trebuie să fie majuscule.');\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    // Validate form before submission\r\n    const validateForm = () => {\r\n        const errors = {};\r\n\r\n        // Validate IBAN code\r\n        if (!formData.ibanCode) {\r\n            errors.ibanCode = ['Codul IBAN este obligatoriu.'];\r\n        } else {\r\n            const ibanErrors = validateIbanCode(formData.ibanCode);\r\n            if (ibanErrors.length > 0) {\r\n                errors.ibanCode = ibanErrors;\r\n            }\r\n        }\r\n\r\n        // Validate other required fields\r\n        if (!formData.ecoCode) {\r\n            errors.ecoCode = ['Codul Eco este obligatoriu.'];\r\n        }\r\n\r\n        if (!formData.raionCode) {\r\n            errors.raionCode = ['Raionul este obligatoriu.'];\r\n        }\r\n\r\n        if (!formData.localityCode) {\r\n            errors.localityCode = ['Localitatea este obligatorie.'];\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    // Form submission handler\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Validate form\r\n        const errors = validateForm();\r\n        if (Object.keys(errors).length > 0) {\r\n            setValidationErrors(errors);\r\n            return;\r\n        }\r\n\r\n        setSubmitting(true);\r\n        setError('');\r\n        setSuccess('');\r\n\r\n        try {\r\n            if (isEditMode) {\r\n                // Update existing IBAN\r\n                await axios.put(`/ibans/${id}`, formData);\r\n                setSuccess('IBAN actualizat cu succes!');\r\n\r\n                // Redirect after short delay\r\n                setTimeout(() => navigate('/ibans'), 1500);\r\n            } else {\r\n                // Create new IBAN\r\n                await axios.post('/ibans', formData);\r\n                setSuccess('IBAN adăugat cu succes!');\r\n\r\n                // Redirect after short delay\r\n                setTimeout(() => navigate('/ibans'), 1500);\r\n            }\r\n        } catch (err) {\r\n            console.error('Error saving IBAN:', err);\r\n            setError(\r\n                err.response?.data?.message ||\r\n                'A apărut o eroare. Vă rugăm să încercați din nou.'\r\n            );\r\n        } finally {\r\n            setSubmitting(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"iban-form-container\">\r\n                <h1>{isEditMode ? 'Editare IBAN' : 'Adăugare IBAN Nou'}</h1>\r\n\r\n                {loading && !submitting && (\r\n                    <div className=\"loading-container\">\r\n                        <div className=\"loading-spinner\"></div>\r\n                    </div>\r\n                )}\r\n\r\n                {error && (\r\n                    <div className=\"error-message\">\r\n                        <p><strong>Eroare</strong></p>\r\n                        <p>{error}</p>\r\n                    </div>\r\n                )}\r\n\r\n                {success && (\r\n                    <div className=\"success-message\">\r\n                        <p><strong>Succes</strong></p>\r\n                        <p>{success}</p>\r\n                    </div>\r\n                )}\r\n\r\n                <form onSubmit={handleSubmit} className=\"iban-form\">\r\n                    {/* IBAN Code field */}\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"ibanCode\">\r\n                            Cod IBAN <span className=\"required\">*</span>\r\n                        </label>\r\n                        <input\r\n                            id=\"ibanCode\"\r\n                            name=\"ibanCode\"\r\n                            type=\"text\"\r\n                            value={formData.ibanCode}\r\n                            onChange={handleChange}\r\n                            maxLength=\"24\"\r\n                            className={validationErrors.ibanCode ? 'error' : ''}\r\n                            placeholder=\"MD12AGRN0000123456789012\"\r\n                            disabled={submitting}\r\n                        />\r\n                        {validationErrors.ibanCode && (\r\n                            <div className=\"error-list\">\r\n                                {validationErrors.ibanCode.map((err, index) => (\r\n                                    <p key={index} className=\"error-text\">{err}</p>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                        <p className=\"hint-text\">\r\n                            IBAN-ul trebuie să aibă 24 de caractere, să înceapă cu MD și ultimele 14 caractere să fie cifre.\r\n                        </p>\r\n                    </div>\r\n\r\n                    {/* Year selection */}\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"year\">\r\n                            Anul <span className=\"required\">*</span>\r\n                        </label>\r\n                        <select\r\n                            id=\"year\"\r\n                            name=\"year\"\r\n                            value={formData.year}\r\n                            onChange={handleChange}\r\n                            disabled={submitting}\r\n                        >\r\n                            {years.map(year => (\r\n                                <option key={year} value={year}>\r\n                                    {year}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    {/* Eco code selection */}\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"ecoCode\">\r\n                            Codul Eco <span className=\"required\">*</span>\r\n                        </label>\r\n                        <select\r\n                            id=\"ecoCode\"\r\n                            name=\"ecoCode\"\r\n                            value={formData.ecoCode}\r\n                            onChange={handleChange}\r\n                            className={validationErrors.ecoCode ? 'error' : ''}\r\n                            disabled={submitting}\r\n                        >\r\n                            <option value=\"\">Selectați codul Eco</option>\r\n                            {ecoCodes.map(eco => (\r\n                                <option key={eco.code} value={eco.code}>\r\n                                    {eco.code} - {eco.label}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        {validationErrors.ecoCode && (\r\n                            <p className=\"error-text\">{validationErrors.ecoCode[0]}</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* Raion selection */}\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"raionCode\">\r\n                            Raion <span className=\"required\">*</span>\r\n                        </label>\r\n                        <select\r\n                            id=\"raionCode\"\r\n                            name=\"raionCode\"\r\n                            value={formData.raionCode}\r\n                            onChange={handleChange}\r\n                            className={validationErrors.raionCode ? 'error' : ''}\r\n                            disabled={submitting}\r\n                        >\r\n                            <option value=\"\">Selectați raionul</option>\r\n                            {raions.map(raion => (\r\n                                <option key={raion.code} value={raion.code}>\r\n                                    {raion.code} - {raion.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        {validationErrors.raionCode && (\r\n                            <p className=\"error-text\">{validationErrors.raionCode[0]}</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* Locality selection */}\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"localityCode\">\r\n                            Localitate <span className=\"required\">*</span>\r\n                        </label>\r\n                        <select\r\n                            id=\"localityCode\"\r\n                            name=\"localityCode\"\r\n                            value={formData.localityCode}\r\n                            onChange={handleChange}\r\n                            className={validationErrors.localityCode ? 'error' : ''}\r\n                            disabled={submitting || !formData.raionCode}\r\n                        >\r\n                            <option value=\"\">\r\n                                {formData.raionCode ? 'Selectați localitatea' : 'Selectați mai întâi un raion'}\r\n                            </option>\r\n                            {localities.map(locality => (\r\n                                <option key={locality.code} value={locality.code}>\r\n                                    {locality.code} - {locality.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        {validationErrors.localityCode && (\r\n                            <p className=\"error-text\">{validationErrors.localityCode[0]}</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* Form actions */}\r\n                    <div className=\"form-actions\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"add-iban-btn\"\r\n                            disabled={submitting}\r\n                        >\r\n                            {submitting ? (\r\n                                <>\r\n                                    <span className=\"loading-spinner-sm\"></span>\r\n                                    Se procesează...\r\n                                </>\r\n                            ) : (\r\n                                isEditMode ? 'Salvează modificările' : (\r\n                                    <>\r\n                                        <span className=\"plus-icon\">+</span> Adaugă IBAN\r\n                                    </>\r\n                                )\r\n                            )}\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => navigate('/ibans')}\r\n                            className=\"cancel-button\"\r\n                            disabled={submitting}\r\n                        >\r\n                            Anulează\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IbanForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}